version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy  # Lightweight Ubuntu-based MongoDB
    container_name: pradeep_opticals_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ecommerce_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d  # Optional: init scripts
    networks:
      - pradeep_opticals_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MinIO S3-compatible Object Storage
  minio:
    image: minio/minio:latest  # Official lightweight MinIO image
    container_name: pradeep_opticals_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"    # MinIO API
      - "9001:9001"    # MinIO Console UI
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - pradeep_opticals_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine  # Lightweight Alpine-based Redis
    container_name: pradeep_opticals_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pradeep_opticals_network
    command: redis-server --appendonly yes  # Enable data persistence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

# Persistent Data Volumes
volumes:
  mongodb_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

# Network Configuration
networks:
  pradeep_opticals_network:
    driver: bridge
